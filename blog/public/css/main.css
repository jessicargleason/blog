/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}@-webkit-keyframes sea{0%{background-position:0 0}to{background-position:-1200px 0}}@keyframes sea{0%{background-position:0 0}to{background-position:-1200px 0}}@-webkit-keyframes sky{0%{background-position:0 0}to{background-position:-800px 0}}@keyframes sky{0%{background-position:0 0}to{background-position:-800px 0}}@-webkit-keyframes bounce{0%{top:-3px}to{top:-5px}}@keyframes bounce{0%{top:-3px}to{top:-5px}}@-webkit-keyframes border{0%{-webkit-mask-box-image-width:0 0 70px 0;mask-border-width:0 0 70px 0}to{-webkit-mask-box-image-width:0 0 50px 0;mask-border-width:0 0 50px 0}}@keyframes border{0%{-webkit-mask-box-image-width:0 0 70px 0;mask-border-width:0 0 70px 0}to{-webkit-mask-box-image-width:0 0 50px 0;mask-border-width:0 0 50px 0}}@-webkit-keyframes seahorse{0%{top:0;left:0}25%{left:10px;top:25%}50%{left:20px;top:50%}75%{left:10px;top:25%}to{left:0;top:0}}@keyframes seahorse{0%{top:0;left:0}25%{left:10px;top:25%}50%{left:20px;top:50%}75%{left:10px;top:25%}to{left:0;top:0}}@-webkit-keyframes dive{0%{height:100vh}75%{height:125vh}to{height:100vh}}@keyframes dive{0%{height:100vh}75%{height:125vh}to{height:100vh}}@-webkit-keyframes dive-body{0%{padding-top:5vh}75%{padding-top:0}to{padding-top:5vh}}@keyframes dive-body{0%{padding-top:5vh}75%{padding-top:0}to{padding-top:5vh}}body{background:url(../img/sea-repeat-xy.jpg) repeat;background-color:#379ab2;color:#212121;padding:0;font-family:"Bree Serif",serif;-webkit-animation:sea 60s linear infinite;animation:sea 60s linear infinite;background-position:0 0;font-size:18px;line-height:1.4}@media (prefers-reduced-motion:reduce){body{-webkit-animation:none;animation:none}}a:link,a:visited{color:#000;border-bottom:solid #f0a202;text-decoration:none}a:active,a:focus,a:hover{color:#000;border-bottom-color:#fff;outline-offset:2px}.skill{font-weight:700}.skill,h2{color:#000}h2{font-size:1.8em;margin-bottom:.25em}.visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px}header{background:url(../img/sky-repeat-xy.jpg) repeat;animation:sky 60s linear infinite reverse;-webkit-mask-box-image:url(../img/wave.svg) 44 repeat;mask-border:url(../img/wave.svg) 44 repeat;-webkit-mask-box-image-width:0 0 70px 0;mask-border-width:0 0 70px 0;overflow:hidden;text-align:center;min-height:10vh;padding-bottom:100px;color:#000}@media (prefers-reduced-motion:reduce){header{-webkit-animation:none;animation:none}}header h1{font-size:3.5rem;margin-bottom:0}header h1,header p{padding-left:15px;padding-right:15px}header p{font-size:1.5rem}nav{text-align:left}.hero{height:100vh}footer{background:url(../img/sand.png) repeat-x;background-position:0 100%;min-height:190px;padding:0 15px 25px;display:flex;justify-content:flex-end;align-items:flex-end}footer small{display:inline-block;padding:2px;background-color:rgba(55,154,178,.7)}@media screen and (min-width:900px){footer{padding-left:100px;padding-right:100px}}#main{min-height:80vh;margin:auto;padding-left:15px;padding-right:15px;padding-top:5vh;max-width:960px}ul{list-style-type:none;padding-left:0;margin-left:0}@media screen and (min-width:768px){.project-grid{display:grid;grid-gap:30px;grid-template-columns:1fr 1fr}}.project-grid img{display:block;width:100px;border-radius:50%;margin:15px}.project-listing img{max-width:100%}.project-listing li{display:flex;flex-direction:column;padding-bottom:30px}@media screen and (min-width:900px){.project-listing li{flex-direction:row}}.project-listing h3{margin-top:0}.project-listing__image{flex-shrink:0;margin-bottom:15px}.project-listing__image a{border-bottom:none}@media screen and (min-width:900px){.project-listing__image{flex-basis:330px;padding:0 15px}}.flex{display:flex}.intro{position:absolute;top:50%;width:100%;transform:translateY(-50%);padding-left:15px;padding-right:15px}.content{max-width:35em}.featured{font-size:1.2em}.social{margin-right:15px}.social svg{width:45px;height:45px}.content-graphic{display:none}@media screen and (min-width:900px){.content-graphic{padding:15px 15px 0;display:flex;flex-grow:1;align-items:flex-start;justify-content:center}.content-graphic svg{width:100px;height:100px;margin-right:15px}}.button,button{display:inline-block;padding:10px 15px;margin:5px;border-radius:5px;border:none;background-color:#1f5463;color:#fff;cursor:pointer}.button:link,.button:visited,button:link,button:visited{color:#fff;text-decoration:none;border-bottom:none}.intro-button:after{content:"\2193";position:relative;-webkit-animation:bounce .5s ease-in-out infinite;animation:bounce .5s ease-in-out infinite;padding-left:10px}.button:hover,button:hover{background-color:#007ab3}.dive{animation:dive 1s ease-in-out forwards,sky 60s linear infinite reverse}.dive+.main{-webkit-animation:dive-body 1s ease-in-out forwards;animation:dive-body 1s ease-in-out forwards}.article{max-width:960px;margin:auto;padding-left:15px;padding-right:15px}.article+.article{padding-top:50px;margin-top:50px;border-top:5px solid hsla(0,0%,100%,.5)}.article-entry ul{list-style-type:disc;padding-left:2rem}.article-entry ul li{margin-bottom:.5rem}.article-meta{display:flex;align-items:center}ul.article-tag-list{display:flex;list-style-type:none}ul.article-tag-list .article-tag-list-item{margin-left:10px}.blog-icon{width:25px;height:25px;vertical-align:middle;margin-right:5px}.blog-nav{max-width:960px;margin-left:auto;margin-right:auto}.blog-nav-link{margin-right:15px}.blog-nav-link svg{width:35px;height:35px;vertical-align:middle;margin:5px;color:#000}.blog-nav-home .blog-nav-link:link,.blog-nav-home .blog-nav-link:visited{color:#000}.blog-nav-link:link,.blog-nav-link:visited{border:none}.blog-nav-link:hover .blog-nav-text{border-bottom-color:#fff}.blog-nav-text{border-bottom:3px solid #f0a202}.widget-wrap{padding:10px 20px;border:3px solid hsla(0,0%,100%,.5);margin-bottom:15px}.article-tag-list-link{display:inline-block;background-color:#f0a202;color:#000;border-radius:15px;font-size:.8rem;padding:2px 5px;min-width:50px;text-align:center}.article-tag-list-link:link,.article-tag-list-link:visited{color:#000}.article-tag-list-link:hover{background-color:#fff;border-bottom-color:#fff}.post-img{display:block;width:100%;max-width:600px;margin:15px auto}.recent-list-item{margin-bottom:.25em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwiX2Jhc2Uuc2NzcyIsIl9ibG9nLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkVBQUEsQ0FVQyxLQUNHLGdCQUFpQixDQUNqQiw2QkFBdUMsQ0FVekMsS0FDRSxRQUFTLENBT1gsS0FDRSxhQUFjLENBUWhCLEdBQ0UsYUFBYyxDQUNkLGNBQWdCLENBV2xCLEdBQ0Usc0JBQXVCLENBQ3ZCLFFBQVMsQ0FDVCxnQkFBMEIsQ0FRNUIsSUFDRSwrQkFBaUMsQ0FDakMsYUFBdUIsQ0FVekIsRUFDRSw0QkFBNkIsQ0FRL0IsWUFDRSxrQkFBbUIsQ0FDbkIseUJBQTBCLENBQzFCLHdDQUFpQyxDQUFqQyxnQ0FBMEMsQ0FPNUMsU0FFRSxrQkFBbUIsQ0FRckIsY0FHRSwrQkFBaUMsQ0FDakMsYUFBdUIsQ0FPekIsTUFDRSxhQUFjLENBUWhCLFFBRUUsYUFBYyxDQUNkLGFBQWMsQ0FDZCxpQkFBa0IsQ0FDbEIsdUJBQXdCLENBRzFCLElBQ0UsYUFBZSxDQUdqQixJQUNFLFNBQVcsQ0FVYixJQUNFLGlCQUFrQixDQVdwQixzQ0FLRSxtQkFBb0IsQ0FDcEIsY0FBZSxDQUNmLGdCQUFpQixDQUNqQixRQUFrQixDQVFwQixhQUVFLGdCQUFpQixDQVFuQixjQUVFLG1CQUFvQixDQU90QixnREFJRSx5QkFBMEIsQ0FPNUIsd0hBSUUsaUJBQWtCLENBQ2xCLFNBQVUsQ0FPWiw0R0FJRSw2QkFBOEIsQ0FPaEMsU0FDRSwwQkFBOEIsQ0FVaEMsT0FDRSxxQkFBc0IsQ0FDdEIsYUFBYyxDQUNkLGFBQWMsQ0FDZCxjQUFlLENBQ2YsU0FBVSxDQUNWLGtCQUE0QixDQU85QixTQUNFLHVCQUF3QixDQU8xQixTQUNFLGFBQWMsQ0N4QmxCLDZCRGtDSSxxQkFBc0IsQ0FDdEIsU0FBbUIsQ0N6QnZCLGtGRGtDSSxXQUFZLENDMUJoQixjRG1DSSw0QkFBNkIsQ0FDN0IsbUJBQTZCLENDM0JqQyx5Q0RtQ0ksdUJBQXdCLENB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Q0FDWCxlQUFnQixDQUNoQixnQkFBaUIsQ0FHckIsa0JBQ0ksbUJBQW9CIiwiZmlsZSI6Im1haW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xyXG5cclxuLyogRG9jdW1lbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxyXG4gKi9cclxuXHJcbiBodG1sIHtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXHJcbiAgICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyogU2VjdGlvbnNcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBib2R5IHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXHJcbiAgICovXHJcbiAgXHJcbiAgbWFpbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gICAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgaDEge1xyXG4gICAgZm9udC1zaXplOiAyZW07XHJcbiAgICBtYXJnaW46IDAuNjdlbSAwO1xyXG4gIH1cclxuICBcclxuICAvKiBHcm91cGluZyBjb250ZW50XHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gICAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gICAqL1xyXG4gIFxyXG4gIGhyIHtcclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXHJcbiAgICBoZWlnaHQ6IDA7IC8qIDEgKi9cclxuICAgIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG4gIFxyXG4gIHByZSB7XHJcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cclxuICAgIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAgICovXHJcbiAgXHJcbiAgYSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cclxuICAgKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gICAqL1xyXG4gIFxyXG4gIGFiYnJbdGl0bGVdIHtcclxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICAgKi9cclxuICBcclxuICBiLFxyXG4gIHN0cm9uZyB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZGVyO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBjb2RlLFxyXG4gIGtiZCxcclxuICBzYW1wIHtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gICAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXHJcbiAgXHJcbiAgc21hbGwge1xyXG4gICAgZm9udC1zaXplOiA4MCU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gICAqIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBzdWIsXHJcbiAgc3VwIHtcclxuICAgIGZvbnQtc2l6ZTogNzUlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbiAgfVxyXG4gIFxyXG4gIHN1YiB7XHJcbiAgICBib3R0b206IC0wLjI1ZW07XHJcbiAgfVxyXG4gIFxyXG4gIHN1cCB7XHJcbiAgICB0b3A6IC0wLjVlbTtcclxuICB9XHJcbiAgXHJcbiAgLyogRW1iZWRkZWQgY29udGVudFxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cclxuICAgKi9cclxuICBcclxuICBpbWcge1xyXG4gICAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG4gIH1cclxuICBcclxuICAvKiBGb3Jtc1xyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gICAqL1xyXG4gIFxyXG4gIGJ1dHRvbixcclxuICBpbnB1dCxcclxuICBvcHRncm91cCxcclxuICBzZWxlY3QsXHJcbiAgdGV4dGFyZWEge1xyXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cclxuICAgIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cclxuICAgIG1hcmdpbjogMDsgLyogMiAqL1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICAgKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxyXG4gICAqL1xyXG4gIFxyXG4gIGJ1dHRvbixcclxuICBpbnB1dCB7IC8qIDEgKi9cclxuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cclxuICAgKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAgICovXHJcbiAgXHJcbiAgYnV0dG9uLFxyXG4gIHNlbGVjdCB7IC8qIDEgKi9cclxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gICAqL1xyXG4gIFxyXG4gIGJ1dHRvbixcclxuICBbdHlwZT1cImJ1dHRvblwiXSxcclxuICBbdHlwZT1cInJlc2V0XCJdLFxyXG4gIFt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxyXG4gICAqL1xyXG4gIFxyXG4gIGJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcclxuICBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuICBbdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG4gIFt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcclxuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICAgKi9cclxuICBcclxuICBidXR0b246LW1vei1mb2N1c3JpbmcsXHJcbiAgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXHJcbiAgW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcclxuICBbdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XHJcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAgKi9cclxuICBcclxuICBmaWVsZHNldCB7XHJcbiAgICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBsZWdlbmQge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xyXG4gICAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cclxuICAgIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cclxuICAgIHBhZGRpbmc6IDA7IC8qIDMgKi9cclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cclxuICAgKi9cclxuICBcclxuICBwcm9ncmVzcyB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxyXG4gICAqL1xyXG4gIFxyXG4gIHRleHRhcmVhIHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gIH1cclxuICBcclxuICAvKipcclxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cclxuICAgKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXHJcbiAgICovXHJcbiAgXHJcbiAgW3R5cGU9XCJjaGVja2JveFwiXSxcclxuICBbdHlwZT1cInJhZGlvXCJdIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICAgIHBhZGRpbmc6IDA7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxyXG4gICAqL1xyXG4gIFxyXG4gIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG4gIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICAgIGhlaWdodDogYXV0bztcclxuICB9XHJcbiAgXHJcbiAgLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAgICovXHJcbiAgXHJcbiAgW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cclxuICAgIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICAgKi9cclxuICBcclxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XHJcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAgICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gICAqL1xyXG4gIFxyXG4gIDo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICAgIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cclxuICB9XHJcbiAgXHJcbiAgLyogSW50ZXJhY3RpdmVcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4gIFxyXG4gIC8qXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cclxuICAgKi9cclxuICBcclxuICBkZXRhaWxzIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICAvKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuICBcclxuICBzdW1tYXJ5IHtcclxuICAgIGRpc3BsYXk6IGxpc3QtaXRlbTtcclxuICB9XHJcbiAgXHJcbiAgLyogTWlzY1xyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxyXG4gICAqL1xyXG4gIFxyXG4gIHRlbXBsYXRlIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxyXG4gICAqL1xyXG4gIFxyXG4gIFtoaWRkZW5dIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfSIsIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cclxuICovXG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcclxuICAgKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cclxuICAgKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcclxuICAgKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAgICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cclxuICAgKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICAgKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxyXG4gICAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gICAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gICAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICAgKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcclxuICAgKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxyXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAgICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cclxuICAgKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXHJcbiAgICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXHJcbiAgICogYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcclxuICAgKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxyXG4gICAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxyXG4gICAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICAgKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cclxuICAgKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxyXG4gICAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gICAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICAgKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXHJcbiAgICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cclxuICAgKi9cbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAgKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxyXG4gICAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cclxuICAgKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxyXG4gICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAgKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxyXG4gICAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcclxuICAgKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAgICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcclxuICAgKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cclxuICAgKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXHJcbiAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXHJcbiAgICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxyXG4gICAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcclxuICAgKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAgICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gICAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gICAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cclxuICAgKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXHJcbiAgICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxyXG4gICAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXHJcbiAgICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcclxuICAgKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIE1pc2NcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXHJcbiAgICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxyXG4gICAqL1xudGVtcGxhdGUge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxyXG4gICAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbiosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG5Aa2V5ZnJhbWVzIHNlYSB7XG4gIDAlIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7IH1cbiAgMTAwJSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyMDBweCAwOyB9IH1cblxuQGtleWZyYW1lcyBza3kge1xuICAwJSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwOyB9XG4gIDEwMCUge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IC04MDBweCAwOyB9IH1cblxuQGtleWZyYW1lcyBib3VuY2Uge1xuICAwJSB7XG4gICAgdG9wOiAtM3B4OyB9XG4gIDEwMCUge1xuICAgIHRvcDogLTVweDsgfSB9XG5cbkBrZXlmcmFtZXMgYm9yZGVyIHtcbiAgMCUge1xuICAgIG1hc2stYm9yZGVyLXdpZHRoOiAwIDAgNzBweCAwOyB9XG4gIDEwMCUge1xuICAgIG1hc2stYm9yZGVyLXdpZHRoOiAwIDAgNTBweCAwOyB9IH1cblxuQGtleWZyYW1lcyBzZWFob3JzZSB7XG4gIDAlIHtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDsgfVxuICAyNSUge1xuICAgIGxlZnQ6IDEwcHg7XG4gICAgdG9wOiAyNSU7IH1cbiAgNTAlIHtcbiAgICBsZWZ0OiAyMHB4O1xuICAgIHRvcDogNTAlOyB9XG4gIDc1JSB7XG4gICAgbGVmdDogMTBweDtcbiAgICB0b3A6IDI1JTsgfVxuICAxMDAlIHtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDsgfSB9XG5cbkBrZXlmcmFtZXMgZGl2ZSB7XG4gIDAlIHtcbiAgICBoZWlnaHQ6IDEwMHZoOyB9XG4gIDc1JSB7XG4gICAgaGVpZ2h0OiAxMjV2aDsgfVxuICAxMDAlIHtcbiAgICBoZWlnaHQ6IDEwMHZoOyB9IH1cblxuQGtleWZyYW1lcyBkaXZlLWJvZHkge1xuICAwJSB7XG4gICAgcGFkZGluZy10b3A6IDV2aDsgfVxuICA3NSUge1xuICAgIHBhZGRpbmctdG9wOiAwOyB9XG4gIDEwMCUge1xuICAgIHBhZGRpbmctdG9wOiA1dmg7IH0gfVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogdXJsKC4uL2ltZy9zZWEtcmVwZWF0LXh5LmpwZykgcmVwZWF0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzc5QUIyO1xuICBjb2xvcjogIzIxMjEyMTtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1mYW1pbHk6ICdCcmVlIFNlcmlmJywgc2VyaWY7XG4gIGFuaW1hdGlvbjogc2VhIDYwcyBsaW5lYXIgaW5maW5pdGU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMS40OyB9XG4gIEBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XG4gICAgYm9keSB7XG4gICAgICBhbmltYXRpb246IG5vbmU7IH0gfVxuXG5hOmxpbmssIGE6dmlzaXRlZCB7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICBib3JkZXItYm90dG9tOiAjZjBhMjAyIHNvbGlkO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuYTpob3ZlciwgYTphY3RpdmUsIGE6Zm9jdXMge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZmZmZjtcbiAgb3V0bGluZS1vZmZzZXQ6IDJweDsgfVxuXG4uc2tpbGwge1xuICBjb2xvcjogIzAwMDAwMDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuaDIge1xuICBmb250LXNpemU6IDEuOGVtO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgbWFyZ2luLWJvdHRvbTogLjI1ZW07IH1cblxuLnZpc3VhbGx5LWhpZGRlbiB7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGNsaXAtcGF0aDogaW5zZXQoNTAlKTtcbiAgaGVpZ2h0OiAxcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgd2lkdGg6IDFweDsgfVxuXG5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL3NreS1yZXBlYXQteHkuanBnKSByZXBlYXQ7XG4gIGFuaW1hdGlvbjogc2t5IDYwcyBsaW5lYXIgaW5maW5pdGUgcmV2ZXJzZTtcbiAgbWFzay1ib3JkZXI6IHVybCguLi9pbWcvd2F2ZS5zdmcpIDQ0IHJlcGVhdDtcbiAgbWFzay1ib3JkZXItd2lkdGg6IDAgMCA3MHB4IDA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWluLWhlaWdodDogMTB2aDtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xuICBjb2xvcjogIzAwMDsgfVxuICBAbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSkge1xuICAgIGhlYWRlciB7XG4gICAgICBhbmltYXRpb246IG5vbmU7IH0gfVxuICBoZWFkZXIgaDEge1xuICAgIGZvbnQtc2l6ZTogMy41cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7IH1cbiAgaGVhZGVyIHAge1xuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyB9XG5cbm5hdiB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLmhlcm8ge1xuICBoZWlnaHQ6IDEwMHZoOyB9XG5cbmZvb3RlciB7XG4gIGJhY2tncm91bmQ6IHVybCguLi9pbWcvc2FuZC5wbmcpIHJlcGVhdC14O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBsZWZ0IGJvdHRvbTtcbiAgbWluLWhlaWdodDogMTkwcHg7XG4gIHBhZGRpbmc6IDAgMTVweCAyNXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICBhbGlnbi1pdGVtczogZmxleC1lbmQ7IH1cbiAgZm9vdGVyIHNtYWxsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTUsIDE1NCwgMTc4LCAwLjcpOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDkwMHB4KSB7XG4gICAgZm9vdGVyIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMTAwcHg7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxMDBweDsgfSB9XG5cbiNtYWluIHtcbiAgbWluLWhlaWdodDogODB2aDtcbiAgbWFyZ2luOiBhdXRvO1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmctdG9wOiA1dmg7XG4gIG1heC13aWR0aDogOTYwcHg7IH1cblxudWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgbWFyZ2luLWxlZnQ6IDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnByb2plY3QtZ3JpZCB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLWdhcDogMzBweDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7IH0gfVxuXG4ucHJvamVjdC1ncmlkIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgbWFyZ2luOiAxNXB4OyB9XG5cbi5wcm9qZWN0LWxpc3RpbmcgaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbi5wcm9qZWN0LWxpc3RpbmcgbGkge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nLWJvdHRvbTogMzBweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5MDBweCkge1xuICAgIC5wcm9qZWN0LWxpc3RpbmcgbGkge1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfSB9XG5cbi5wcm9qZWN0LWxpc3RpbmcgaDMge1xuICBtYXJnaW4tdG9wOiAwOyB9XG5cbi5wcm9qZWN0LWxpc3RpbmdfX2ltYWdlIHtcbiAgZmxleC1zaHJpbms6IDA7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7IH1cbiAgLnByb2plY3QtbGlzdGluZ19faW1hZ2UgYSB7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5MDBweCkge1xuICAgIC5wcm9qZWN0LWxpc3RpbmdfX2ltYWdlIHtcbiAgICAgIGZsZXgtYmFzaXM6IDMzMHB4O1xuICAgICAgcGFkZGluZzogMCAxNXB4OyB9IH1cblxuLmZsZXgge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5pbnRybyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIHdpZHRoOiAxMDAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbiAgcGFkZGluZy1yaWdodDogMTVweDsgfVxuXG4uY29udGVudCB7XG4gIG1heC13aWR0aDogMzVlbTsgfVxuXG4uZmVhdHVyZWQge1xuICBmb250LXNpemU6IDEuMmVtOyB9XG5cbi5zb2NpYWwge1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7IH1cbiAgLnNvY2lhbCBzdmcge1xuICAgIHdpZHRoOiA0NXB4O1xuICAgIGhlaWdodDogNDVweDsgfVxuXG4uY29udGVudC1ncmFwaGljIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5MDBweCkge1xuICAgIC5jb250ZW50LWdyYXBoaWMge1xuICAgICAgcGFkZGluZzogMTVweCAxNXB4IDA7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1ncm93OiAxO1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgICAgLmNvbnRlbnQtZ3JhcGhpYyBzdmcge1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIGhlaWdodDogMTAwcHg7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTVweDsgfSB9XG5cbmJ1dHRvbiwgLmJ1dHRvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMTBweCAxNXB4O1xuICBtYXJnaW46IDVweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZjU0NjM7XG4gIGNvbG9yOiAjZmZmO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgYnV0dG9uOmxpbmssIGJ1dHRvbjp2aXNpdGVkLCAuYnV0dG9uOmxpbmssIC5idXR0b246dmlzaXRlZCB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IG5vbmU7IH1cblxuLmludHJvLWJ1dHRvbjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXFwyMTkzXCI7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYW5pbWF0aW9uOiBib3VuY2UgLjVzIGVhc2UtaW4tb3V0IGluZmluaXRlO1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7IH1cblxuYnV0dG9uOmhvdmVyLCAuYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN0FCMzsgfVxuXG4uZGl2ZSB7XG4gIGFuaW1hdGlvbjogZGl2ZSBlYXNlLWluLW91dCAxcyBmb3J3YXJkcywgc2t5IDYwcyBsaW5lYXIgaW5maW5pdGUgcmV2ZXJzZTsgfVxuXG4uZGl2ZSArIC5tYWluIHtcbiAgYW5pbWF0aW9uOiBkaXZlLWJvZHkgZWFzZS1pbi1vdXQgMXMgZm9yd2FyZHM7IH1cblxuLmFydGljbGUge1xuICBtYXgtd2lkdGg6IDk2MHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbiAgcGFkZGluZy1yaWdodDogMTVweDsgfVxuICAuYXJ0aWNsZSArIC5hcnRpY2xlIHtcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xuICAgIGJvcmRlci10b3A6IDVweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7IH1cblxuLmFydGljbGUtZW50cnkgdWwge1xuICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG4gIHBhZGRpbmctbGVmdDogMnJlbTsgfVxuICAuYXJ0aWNsZS1lbnRyeSB1bCBsaSB7XG4gICAgbWFyZ2luLWJvdHRvbTogLjVyZW07IH1cblxuLmFydGljbGUtbWV0YSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxudWwuYXJ0aWNsZS10YWctbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgfVxuICB1bC5hcnRpY2xlLXRhZy1saXN0IC5hcnRpY2xlLXRhZy1saXN0LWl0ZW0ge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9XG5cbi5ibG9nLWljb24ge1xuICB3aWR0aDogMjVweDtcbiAgaGVpZ2h0OiAyNXB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXJnaW4tcmlnaHQ6IDVweDsgfVxuXG4uYmxvZy1uYXYge1xuICBtYXgtd2lkdGg6IDk2MHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG5cbi5ibG9nLW5hdi1saW5rIHtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XG4gIC5ibG9nLW5hdi1saW5rIHN2ZyB7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgbWFyZ2luOiA1cHg7XG4gICAgY29sb3I6ICMwMDA7IH1cbiAgLmJsb2ctbmF2LWhvbWUgLmJsb2ctbmF2LWxpbms6bGluaywgLmJsb2ctbmF2LWhvbWUgLmJsb2ctbmF2LWxpbms6dmlzaXRlZCB7XG4gICAgY29sb3I6ICMwMDA7IH1cbiAgLmJsb2ctbmF2LWxpbms6bGluaywgLmJsb2ctbmF2LWxpbms6dmlzaXRlZCB7XG4gICAgYm9yZGVyOiBub25lOyB9XG4gIC5ibG9nLW5hdi1saW5rOmhvdmVyIC5ibG9nLW5hdi10ZXh0IHtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjZmZmOyB9XG5cbi5ibG9nLW5hdi10ZXh0IHtcbiAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmMGEyMDI7IH1cblxuLndpZGdldC13cmFwIHtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7IH1cblxuLmFydGljbGUtdGFnLWxpc3QtbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwYTIwMjtcbiAgY29sb3I6ICMwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIGZvbnQtc2l6ZTogLjhyZW07XG4gIHBhZGRpbmc6IDJweCA1cHg7XG4gIG1pbi13aWR0aDogNTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5hcnRpY2xlLXRhZy1saXN0LWxpbms6bGluaywgLmFydGljbGUtdGFnLWxpc3QtbGluazp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzAwMDsgfVxuICAuYXJ0aWNsZS10YWctbGlzdC1saW5rOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNmZmY7IH1cblxuLnBvc3QtaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBtYXJnaW46IDE1cHggYXV0bzsgfVxuXG4ucmVjZW50LWxpc3QtaXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IC4yNWVtOyB9XG4iLCJodG1sIHtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIH1cclxuICAqLCAqOmJlZm9yZSwgKjphZnRlciB7XHJcblx0Ym94LXNpemluZzogaW5oZXJpdDtcclxuICB9XHJcblxyXG5Aa2V5ZnJhbWVzIHNlYSB7XHJcblx0MCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogMCAwO1xyXG5cdH1cclxuXHQxMDAlIHtcclxuXHRcdGJhY2tncm91bmQtcG9zaXRpb246IC0xMjAwcHggMDtcclxuXHR9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc2t5IHtcclxuXHQwJSB7XHJcblx0XHRiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIDA7XHJcblx0fVxyXG5cdDEwMCUge1xyXG5cdFx0YmFja2dyb3VuZC1wb3NpdGlvbjogLTgwMHB4IDA7XHJcblx0fVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGJvdW5jZSB7XHJcblx0MCUge1xyXG5cdFx0dG9wOiAtM3B4O1xyXG5cdH1cclxuXHQxMDAlIHtcclxuXHRcdHRvcDogLTVweDtcclxuXHR9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgYm9yZGVyIHtcclxuXHQwJSB7XHJcblx0XHRtYXNrLWJvcmRlci13aWR0aDogMCAwIDcwcHggMDtcclxuXHR9XHJcblx0MTAwJSB7XHJcblx0XHRtYXNrLWJvcmRlci13aWR0aDogMCAwIDUwcHggMDtcclxuXHR9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgc2VhaG9yc2Uge1xyXG5cdDAlIHtcclxuXHRcdHRvcDogMDtcclxuXHRcdGxlZnQ6IDA7XHJcblx0fVxyXG5cdDI1JSB7XHJcblx0XHRsZWZ0OiAxMHB4O1xyXG5cdFx0dG9wOiAyNSU7XHJcblx0fVxyXG5cdDUwJSB7XHJcblx0XHRsZWZ0OiAyMHB4O1xyXG5cdFx0dG9wOiA1MCU7XHJcblx0fVxyXG5cdDc1JSB7XHJcblx0XHRsZWZ0OiAxMHB4O1xyXG5cdFx0dG9wOiAyNSU7XHJcblx0fVxyXG5cdDEwMCUge1xyXG5cdFx0bGVmdDogMDtcclxuXHRcdHRvcDogMDtcclxuXHR9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgZGl2ZSB7XHJcblx0MCUge1xyXG5cdFx0aGVpZ2h0OiAxMDB2aDtcclxuXHR9XHJcblx0NzUlIHtcclxuXHRcdGhlaWdodDogMTI1dmg7XHJcblx0fVxyXG5cdDEwMCUge1xyXG5cdFx0aGVpZ2h0OiAxMDB2aDtcclxuXHR9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgZGl2ZS1ib2R5IHtcclxuXHQwJSB7XHJcblx0XHRwYWRkaW5nLXRvcDogNXZoO1xyXG5cdH1cclxuXHQ3NSUge1xyXG5cdFx0cGFkZGluZy10b3A6IDA7XHJcblx0fVxyXG5cdDEwMCUge1xyXG5cdFx0cGFkZGluZy10b3A6IDV2aDtcclxuXHR9XHJcbn1cclxuXHJcbmJvZHkge1xyXG5cdGJhY2tncm91bmQ6IHVybCguLi9pbWcvc2VhLXJlcGVhdC14eS5qcGcpIHJlcGVhdDtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjMzc5QUIyO1xyXG5cdGNvbG9yOiMyMTIxMjE7XHJcblx0cGFkZGluZzogMDtcclxuXHRmb250LWZhbWlseTogJ0JyZWUgU2VyaWYnLCBzZXJpZjtcclxuXHRhbmltYXRpb246IHNlYSA2MHMgbGluZWFyIGluZmluaXRlO1xyXG5cdGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcclxuXHRmb250LXNpemU6IDE4cHg7IFxyXG5cdGxpbmUtaGVpZ2h0OiAxLjQ7XHJcblx0QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcclxuXHRcdGFuaW1hdGlvbjogbm9uZTtcclxuXHR9XHJcbn1cclxuXHJcbmE6bGluaywgYTp2aXNpdGVkIHtcclxuXHRjb2xvcjogIzAwMDAwMDtcclxuXHRib3JkZXItYm90dG9tOiAjZjBhMjAyIHNvbGlkO1xyXG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG5cclxuYTpob3ZlciwgYTphY3RpdmUsIGE6Zm9jdXMge1xyXG5cdGNvbG9yOiAjMDAwMDAwO1xyXG5cdGJvcmRlci1ib3R0b20tY29sb3I6ICNmZmZmZmY7XHJcblx0b3V0bGluZS1vZmZzZXQ6IDJweDtcclxufVxyXG5cclxuLnNraWxsIHtcclxuXHRjb2xvcjogIzAwMDAwMDtcclxuXHRmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuaDIge1xyXG5cdGZvbnQtc2l6ZTogMS44ZW07XHJcblx0Y29sb3I6ICMwMDAwMDA7XHJcblx0bWFyZ2luLWJvdHRvbTogLjI1ZW07XHJcbn1cclxuXHJcbi52aXN1YWxseS1oaWRkZW4ge1xyXG5cdGNsaXA6IHJlY3QoMCAwIDAgMCk7XHJcblx0Y2xpcC1wYXRoOiBpbnNldCg1MCUpO1xyXG5cdGhlaWdodDogMXB4O1xyXG5cdG92ZXJmbG93OiBoaWRkZW47XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcblx0d2lkdGg6IDFweDtcclxufVxyXG5cclxuaGVhZGVyIHtcclxuXHRiYWNrZ3JvdW5kOiB1cmwoLi4vaW1nL3NreS1yZXBlYXQteHkuanBnKSByZXBlYXQ7XHJcblx0YW5pbWF0aW9uOiBza3kgNjBzIGxpbmVhciBpbmZpbml0ZSByZXZlcnNlO1xyXG5cdG1hc2stYm9yZGVyOiB1cmwoLi4vaW1nL3dhdmUuc3ZnKSA0NCByZXBlYXQ7XHJcblx0bWFzay1ib3JkZXItd2lkdGg6IDAgMCA3MHB4IDA7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0bWluLWhlaWdodDogMTB2aDtcclxuXHRwYWRkaW5nLWJvdHRvbTogMTAwcHg7XHJcblx0Y29sb3I6ICMwMDA7XHJcblx0QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcclxuXHRcdGFuaW1hdGlvbjogbm9uZTtcclxuXHR9XHJcblx0aDEge1xyXG5cdFx0Zm9udC1zaXplOiAzLjVyZW07XHJcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdFx0cGFkZGluZy1sZWZ0OiAxNXB4O1xyXG5cdFx0cGFkZGluZy1yaWdodDogMTVweDtcclxuXHR9XHJcblx0cCB7XHJcblx0XHRmb250LXNpemU6IDEuNXJlbTtcclxuXHRcdHBhZGRpbmctbGVmdDogMTVweDtcclxuXHRcdHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcblx0fVxyXG59XHJcblxyXG5uYXYge1xyXG5cdHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi5oZXJvIHtcclxuXHRoZWlnaHQ6IDEwMHZoO1xyXG59XHJcblxyXG5mb290ZXIge1xyXG5cdGJhY2tncm91bmQ6IHVybCguLi9pbWcvc2FuZC5wbmcpIHJlcGVhdC14O1xyXG5cdGJhY2tncm91bmQtcG9zaXRpb246IGxlZnQgYm90dG9tO1xyXG5cdG1pbi1oZWlnaHQ6IDE5MHB4O1xyXG5cdC8vaGVpZ2h0OiAyNXZoO1xyXG5cdHBhZGRpbmc6IDAgMTVweCAyNXB4O1xyXG5cdGRpc3BsYXk6IGZsZXg7XHJcblx0anVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHRhbGlnbi1pdGVtczogZmxleC1lbmQ7XHJcblx0c21hbGwge1xyXG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdFx0cGFkZGluZzogMnB4O1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogcmdiYSg1NSwxNTQsMTc4LC43KVxyXG5cdH1cclxuXHRAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5MDBweCkge1xyXG5cdFx0cGFkZGluZy1sZWZ0OiAxMDBweDtcclxuXHRcdHBhZGRpbmctcmlnaHQ6IDEwMHB4O1xyXG5cdH1cclxufVxyXG5cclxuI21haW4ge1xyXG5cdG1pbi1oZWlnaHQ6IDgwdmg7XHJcblx0Ly9tYXgtd2lkdGg6IDExMDBweDtcclxuXHRtYXJnaW46IGF1dG87XHJcblx0cGFkZGluZy1sZWZ0OiAxNXB4O1xyXG5cdHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcblx0cGFkZGluZy10b3A6IDV2aDtcclxuXHRtYXgtd2lkdGg6IDk2MHB4O1xyXG59XHJcblxyXG51bCB7XHJcblx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xyXG5cdHBhZGRpbmctbGVmdDogMDtcclxuXHRtYXJnaW4tbGVmdDogMDtcclxufVxyXG5cclxuLnByb2plY3QtZ3JpZCB7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuXHRcdGRpc3BsYXk6IGdyaWQ7XHJcblx0XHRncmlkLWdhcDogMzBweDtcclxuXHRcdGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuXHR9XHJcblx0aW1nIHtcclxuXHRcdGRpc3BsYXk6IGJsb2NrO1xyXG5cdFx0d2lkdGg6IDEwMHB4O1xyXG5cdFx0Ym9yZGVyLXJhZGl1czogNTAlO1xyXG5cdFx0bWFyZ2luOiAxNXB4O1xyXG5cdH1cclxufVxyXG5cclxuLnByb2plY3QtbGlzdGluZyB7XHJcblx0aW1nIHtcclxuXHRcdG1heC13aWR0aDogMTAwJTtcclxuXHR9XHJcblx0bGkge1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0XHRwYWRkaW5nLWJvdHRvbTogMzBweDtcclxuXHRcdEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDkwMHB4KSB7XHJcblx0XHRcdGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblx0XHR9XHJcblx0fVxyXG5cdGgzIHtcclxuXHRcdG1hcmdpbi10b3A6IDA7XHJcblx0fVxyXG59XHJcblxyXG4ucHJvamVjdC1saXN0aW5nX19pbWFnZSB7XHJcblx0ZmxleC1zaHJpbms6IDA7XHJcblx0bWFyZ2luLWJvdHRvbTogMTVweDtcclxuXHRhIHtcclxuXHRcdGJvcmRlci1ib3R0b206IG5vbmU7XHJcblx0fVxyXG5cdEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDkwMHB4KSB7XHJcblx0XHRmbGV4LWJhc2lzOiAzMzBweDtcclxuXHRcdHBhZGRpbmc6IDAgMTVweDtcclxuXHR9XHJcbn1cclxuXHJcbi5mbGV4IHtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uaW50cm8ge1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHR0b3A6IDUwJTtcclxuXHR3aWR0aDogMTAwJTtcclxuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcblx0cGFkZGluZy1sZWZ0OiAxNXB4O1xyXG5cdHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbn1cclxuXHJcbi5jb250ZW50IHtcclxuXHRtYXgtd2lkdGg6IDM1ZW07XHJcbn1cclxuXHJcbi5mZWF0dXJlZCB7XHJcblx0Zm9udC1zaXplOiAxLjJlbTtcclxufVxyXG5cclxuLnNvY2lhbCB7XHJcblx0bWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG5cdHN2ZyB7XHJcblx0XHR3aWR0aDogNDVweDtcclxuXHRcdGhlaWdodDogNDVweDtcclxuXHR9XHJcbn1cclxuXHJcbi5jb250ZW50LWdyYXBoaWMge1xyXG5cdGRpc3BsYXk6IG5vbmU7XHJcblx0QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTAwcHgpIHtcclxuXHRcdHBhZGRpbmc6IDE1cHggMTVweCAwO1xyXG5cdFx0ZGlzcGxheTogZmxleDtcclxuXHRcdGZsZXgtZ3JvdzogMTtcclxuXHRcdGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xyXG5cdFx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblx0XHRzdmcge1xyXG5cdFx0XHR3aWR0aDogMTAwcHg7XHJcblx0XHRcdGhlaWdodDogMTAwcHg7XHJcblx0XHRcdG1hcmdpbi1yaWdodDogMTVweDtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmJ1dHRvbiwgLmJ1dHRvbiB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHBhZGRpbmc6IDEwcHggMTVweDtcclxuXHRtYXJnaW46IDVweDtcclxuXHRib3JkZXItcmFkaXVzOiA1cHg7XHJcblx0Ym9yZGVyOiBub25lO1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICMxZjU0NjM7XHJcblx0Y29sb3I6ICNmZmY7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdCY6bGluaywgJjp2aXNpdGVkIHtcclxuXHRcdGNvbG9yOiAjZmZmO1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdFx0Ym9yZGVyLWJvdHRvbTogbm9uZTtcclxuXHR9XHJcbn1cclxuXHJcbi5pbnRyby1idXR0b246YWZ0ZXIge1xyXG5cdGNvbnRlbnQ6IFwiXFwyMTkzXCI7XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdGFuaW1hdGlvbjogYm91bmNlIC41cyBlYXNlLWluLW91dCBpbmZpbml0ZTtcclxuXHRwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcblx0XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciwgLmJ1dHRvbjpob3ZlciB7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogIzAwN0FCMztcclxufVxyXG5cclxuLmRpdmUge1xyXG5cdGFuaW1hdGlvbjogZGl2ZSBlYXNlLWluLW91dCAxcyBmb3J3YXJkcywgc2t5IDYwcyBsaW5lYXIgaW5maW5pdGUgcmV2ZXJzZTtcclxufVxyXG5cclxuLmRpdmUgKyAubWFpbiB7XHJcblx0YW5pbWF0aW9uOiBkaXZlLWJvZHkgZWFzZS1pbi1vdXQgMXMgZm9yd2FyZHM7XHJcbn0iLCIuYXJ0aWNsZSB7XHJcbiAgICBtYXgtd2lkdGg6IDk2MHB4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMTVweDtcclxuICAgICYgKyAmIHtcclxuICAgICAgICBwYWRkaW5nLXRvcDogNTBweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgICAgIGJvcmRlci10b3A6IDVweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LC41KTtcclxuICAgIH1cclxufVxyXG5cclxuLmFydGljbGUtZW50cnkge1xyXG4gICAgdWwge1xyXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJyZW07XHJcbiAgICAgICAgbGkge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hcnRpY2xlLW1ldGEge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbnVsLmFydGljbGUtdGFnLWxpc3Qge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIC5hcnRpY2xlLXRhZy1saXN0LWl0ZW0ge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4uYmxvZy1pY29uIHtcclxuICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIG1hcmdpbi1yaWdodDogNXB4O1xyXG59XHJcblxyXG4uYmxvZy1uYXYge1xyXG4gICAgbWF4LXdpZHRoOiA5NjBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uYmxvZy1uYXYtbGluayB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICBzdmcge1xyXG4gICAgICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgICAgIGhlaWdodDogMzVweDtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIG1hcmdpbjogNXB4O1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG4gICAgLmJsb2ctbmF2LWhvbWUgJiB7XHJcbiAgICAgICAgJjpsaW5rLCAmOnZpc2l0ZWQge1xyXG4gICAgICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmOmxpbmssICY6dmlzaXRlZCB7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlciAuYmxvZy1uYXYtdGV4dCB7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZjtcclxuICAgIH1cclxufVxyXG5cclxuLmJsb2ctbmF2LXRleHQge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmMGEyMDI7XHJcbn1cclxuXHJcbi53aWRnZXQtd3JhcCB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDI1NSwyNTUsMjU1LC41KTtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5hcnRpY2xlLXRhZy1saXN0LWxpbmsge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YwYTIwMjtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICAgIGZvbnQtc2l6ZTogLjhyZW07XHJcbiAgICBwYWRkaW5nOiAycHggNXB4O1xyXG4gICAgbWluLXdpZHRoOiA1MHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgJjpsaW5rLCAmOnZpc2l0ZWQge1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG4gICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG59XHJcblxyXG4ucG9zdC1pbWcge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDE1cHggYXV0bztcclxufVxyXG5cclxuLnJlY2VudC1saXN0LWl0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogLjI1ZW07XHJcbn0iXX0= */
